<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classProcessingUnitInterface" xml:lang="en-US">
<title>ProcessingUnitInterface Class Reference</title>
<indexterm><primary>ProcessingUnitInterface</primary></indexterm>
<para>

<para>This class is the parent class of all the processing units we will create. </para>
 
</para>
<para>
<computeroutput>#include &lt;processing_unit_interface.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for ProcessingUnitInterface:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classProcessingUnitInterface.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual void <link linkend="_classProcessingUnitInterface_1af37e1e66eb6fea8adcbc923441ae6738">Start</link> (void **=nullptr)=0</para>

<para>Use this function to allocate memory for the variables that need it and initialize some of them. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classProcessingUnitInterface_1a7361ce594068a2366049238ada8ec1a2">Run</link> (void *data)=0</para>

<para>Use this function to process the data. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_classProcessingUnitInterface_1a8bdb92bc733f84da5c6aca9db7e2c2e3">Delete</link> ()=0</para>

<para>Use this function to free all the memory allocated in the Start method. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classProcessingUnitInterface">ProcessingUnitInterface</link> * <link linkend="_classProcessingUnitInterface_1a158005e77f828947eaae545a77bbaebd">Clone</link> ()</para>

<para>Returns new pointer to a processing unit class. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This class is the parent class of all the processing units we will create. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classProcessingUnitInterface_1a158005e77f828947eaae545a77bbaebd"/><section>
    <title>Clone()</title>
<indexterm><primary>Clone</primary><secondary>ProcessingUnitInterface</secondary></indexterm>
<indexterm><primary>ProcessingUnitInterface</primary><secondary>Clone</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classProcessingUnitInterface">ProcessingUnitInterface</link> * ProcessingUnitInterface::Clone ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Returns new pointer to a processing unit class. </para>
</para>

<para>Use {return new [class-name]} || Use nullptr to disallow clonning <formalpara><title>Returns</title>

<para>Pointer to the new derived class || nullptr to disallow cloning </para>
</formalpara>
</para>
<para>
Reimplemented in <link linkend="_classNumberPrinter_1a690a4e8a208592c9eb6a5d7041fbb632">NumberPrinter</link>, <link linkend="_classAdder_1a9aa43eacf687ef86a330492e74ece7d5">Adder</link>, <link linkend="_classEdgeDetector_1a7d60da211152e60b001f96ef1d753bdd">EdgeDetector</link>, <link linkend="_classImgOutputer_1a4be473f8ce9f904b9661a05b9ece7787">ImgOutputer</link>, <link linkend="_classImgTruncator_1ac35002ce30d28375e43c6acda0577c52">ImgTruncator</link>, <link linkend="_classIndexer_1a55d16c15dbb066bbfa68dffb33009033">Indexer</link>, and <link linkend="_classSimpleIndexer_1a29675ccbd27f69e0a0470d55536fb158">SimpleIndexer</link>.</para>
</section>
<anchor xml:id="_classProcessingUnitInterface_1a8bdb92bc733f84da5c6aca9db7e2c2e3"/><section>
    <title>Delete()</title>
<indexterm><primary>Delete</primary><secondary>ProcessingUnitInterface</secondary></indexterm>
<indexterm><primary>ProcessingUnitInterface</primary><secondary>Delete</secondary></indexterm>
<para><computeroutput>virtual void ProcessingUnitInterface::Delete ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Use this function to free all the memory allocated in the Start method. </para>
</para>
<para>
Implemented in <link linkend="_classNumberPrinter_1a6bf350b0e8249196a4cbe79c1ce1b640">NumberPrinter</link>, <link linkend="_classAdder_1a39ee5be690869d52dc2dfe412b7747c7">Adder</link>, <link linkend="_classEdgeDetector_1a2ef8d6908a6930e1e26a1554a258b105">EdgeDetector</link>, <link linkend="_classImgOutputer_1aabef2302a1c24b28334fa86d1313c592">ImgOutputer</link>, <link linkend="_classImgTruncator_1ad113d2d4d7b22f39550df32b70f38bfb">ImgTruncator</link>, <link linkend="_classIndexer_1aea45294ae69a7fbcd295689e3b6f9308">Indexer</link>, and <link linkend="_classSimpleIndexer_1a9922cefa517cc3a668497daa1ad57c4a">SimpleIndexer</link>.</para>
</section>
<anchor xml:id="_classProcessingUnitInterface_1a7361ce594068a2366049238ada8ec1a2"/><section>
    <title>Run()</title>
<indexterm><primary>Run</primary><secondary>ProcessingUnitInterface</secondary></indexterm>
<indexterm><primary>ProcessingUnitInterface</primary><secondary>Run</secondary></indexterm>
<para><computeroutput>virtual void ProcessingUnitInterface::Run (void * data)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Use this function to process the data. </para>
</para>

<para>It&apos;s recommended to recast the void* into a Data* to use all its methods. (ONLY IF THE DATA IS A DATA* ALLOCATION)</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>data</entry><entry>
<para>The data to manipulate </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implemented in <link linkend="_classNumberPrinter_1a6b0ac3410217e95f42795f46fa188940">NumberPrinter</link>, <link linkend="_classAdder_1a19888264e8dcaded1580d10c2cf5dfb0">Adder</link>, <link linkend="_classEdgeDetector_1a4b4cdcb26d58152eff812ea837fedb2b">EdgeDetector</link>, <link linkend="_classImgOutputer_1af790ac0aaa8fd825e22593c625607866">ImgOutputer</link>, <link linkend="_classImgTruncator_1a98fc21ac2ac2bbecba7529b1296d80a1">ImgTruncator</link>, <link linkend="_classIndexer_1a08e2cd9af767d96cecbd64a9994d38fc">Indexer</link>, and <link linkend="_classSimpleIndexer_1a49abbcfe95ec60073efdcdf0174b16c5">SimpleIndexer</link>.</para>
</section>
<anchor xml:id="_classProcessingUnitInterface_1af37e1e66eb6fea8adcbc923441ae6738"/><section>
    <title>Start()</title>
<indexterm><primary>Start</primary><secondary>ProcessingUnitInterface</secondary></indexterm>
<indexterm><primary>ProcessingUnitInterface</primary><secondary>Start</secondary></indexterm>
<para><computeroutput>virtual void ProcessingUnitInterface::Start (void **  = <computeroutput>nullptr</computeroutput>
)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Use this function to allocate memory for the variables that need it and initialize some of them. </para>
</para>
<para>
Implemented in <link linkend="_classDoublePipe_1a4adc8d41a77995be6b1059ca7833a3d3">DoublePipe</link>, <link linkend="_classNumberPrinter_1a45e5fac723908f5d9f6c896cea40b86b">NumberPrinter</link>, <link linkend="_classAdder_1a2f8554eb1d403e4bbac3a676fae380ff">Adder</link>, <link linkend="_classEdgeDetector_1ac9d261edf85853da5786247ff730bf16">EdgeDetector</link>, <link linkend="_classImgTruncator_1a135f4be6effd5de4760d39049185fbe3">ImgTruncator</link>, <link linkend="_classIndexer_1abaddf300fbae1bbd563b296f44893465">Indexer</link>, <link linkend="_classSimpleIndexer_1a7f0a44bc6646d7b57226a84a2856934e">SimpleIndexer</link>, and <link linkend="_classImgOutputer_1ad3419cc131671ac62c89339f6de3cc56">ImgOutputer</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/headers/<link linkend="_processing__unit__interface_8h">processing_unit_interface.h</link></section>
</section>
