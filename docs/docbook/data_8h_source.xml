<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_data_8h_source" xml:lang="en-US">
<title>data.h</title>
<indexterm><primary>include/headers/data.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">&#32;*&#32;LUCID&#32;(Unified&#32;Computing&#32;Image&#32;and&#32;Data-Processing)&#32;is&#32;a&#32;program&#32;to&#32;process</emphasis>
3 <emphasis role="comment">&#32;*&#32;any&#32;type&#32;of&#32;data&#32;concurrently.</emphasis>
4 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;2023&#32;Lucas&#32;Hernández&#32;Abreu</emphasis>
5 <emphasis role="comment">&#32;*</emphasis>
6 <emphasis role="comment">&#32;*&#32;This&#32;program&#32;is&#32;free&#32;software:&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
7 <emphasis role="comment">&#32;*&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
8 <emphasis role="comment">&#32;*&#32;the&#32;Free&#32;Software&#32;Foundation,&#32;either&#32;version&#32;3&#32;of&#32;the&#32;License,&#32;or</emphasis>
9 <emphasis role="comment">&#32;*&#32;(at&#32;your&#32;option)&#32;any&#32;later&#32;version.</emphasis>
10 <emphasis role="comment">&#32;*</emphasis>
11 <emphasis role="comment">&#32;*&#32;This&#32;program&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">&#32;*&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">&#32;*&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">&#32;*&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 <emphasis role="comment">&#32;*</emphasis>
16 <emphasis role="comment">&#32;*&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License</emphasis>
17 <emphasis role="comment">&#32;*&#32;along&#32;with&#32;this&#32;program.&#32;&#32;If&#32;not,&#32;see&#32;&lt;https://www.gnu.org/licenses/&gt;.</emphasis>
18 <emphasis role="comment">&#32;*</emphasis>
19 <emphasis role="comment">&#32;*&#32;Author:&#32;&#32;Lucas&#32;Hernández&#32;Abreu</emphasis>
20 <emphasis role="comment">&#32;*&#32;Contact:&#32;lucas.hernandez.09@ull.edu.es</emphasis>
21 <emphasis role="comment">&#32;*/</emphasis>
22 
32 <emphasis role="preprocessor">#ifndef&#32;_DATA_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_DATA_H</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_memory__manager_8h">memory_manager.h</link>&quot;</emphasis>
36 
47 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classData">Data</link>&#32;{
48 &#32;&#32;<emphasis role="keyword">public</emphasis>:
53 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structData_1_1DataKey">DataKey</link>&#32;{
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_structData_1_1DataKey_1abd4711cc51b5fd206937cd9d08eb6cbe">key</link>;&#32;
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_structData_1_1DataKey_1ae2e54eec0f18ef1a9b7f8fa1dbfde8b8">data</link>;&#32;&#32;&#32;&#32;&#32;&#32;
56 &#32;&#32;&#32;&#32;};
57 
58 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;data&#32;constructor</emphasis>
59 &#32;&#32;&#32;&#32;<link linkend="_classData">Data</link>(<emphasis role="keywordtype">void</emphasis>&#32;*,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;<emphasis role="keyword">false</emphasis>);
60 
61 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;data&#32;destructor</emphasis>
62 &#32;&#32;&#32;&#32;<link linkend="_classData_1aab31956423290f0d62dcca47ab4d16dd">~Data</link>();
63 
64 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pushes&#32;the&#32;struct&#32;{key,&#32;data}&#32;to&#32;the&#32;extra&#32;data&#32;allocator</emphasis>
65 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classData_1a9910d080ca028a52d61408b4dec7b135">PushExtraData</link>(<link linkend="_structData_1_1DataKey">DataKey</link>&#32;*);
66 
67 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Gets&#32;the&#32;pointer&#32;to&#32;the&#32;extra&#32;data&#32;so&#32;you&#32;can&#32;manipulate&#32;it</emphasis>
68 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_classData_1a97e6952ad6dff622cb9e51d1fcbda74f">GetExtraData</link>(std::string);
69 
70 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Gets&#32;the&#32;initial&#32;data&#32;stored&#32;in&#32;the&#32;class</emphasis>
71 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_classData_1afe99ebac219f3ea692b9ebd3315b8cdd">data</link>();
72 
73 &#32;&#32;<emphasis role="keyword">private</emphasis>:
74 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*data_;
75 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;index_;
76 &#32;&#32;&#32;&#32;std::vector&lt;DataKey&#32;*&gt;&#32;extra_data_;
77 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;debug_;
78 };
79 
80 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
