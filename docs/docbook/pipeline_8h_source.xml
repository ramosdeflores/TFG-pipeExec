<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_pipeline_8h_source" xml:lang="en-US">
<title>pipeline.h</title>
<indexterm><primary>include/headers/pipeline.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">&#32;*&#32;LUCID&#32;(Unified&#32;Computing&#32;Image&#32;and&#32;Data-Processing)&#32;is&#32;a&#32;program&#32;to&#32;process</emphasis>
3 <emphasis role="comment">&#32;*&#32;any&#32;type&#32;of&#32;data&#32;concurrently.</emphasis>
4 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;2023&#32;Lucas&#32;Hernández&#32;Abreu</emphasis>
5 <emphasis role="comment">&#32;*</emphasis>
6 <emphasis role="comment">&#32;*&#32;This&#32;program&#32;is&#32;free&#32;software:&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
7 <emphasis role="comment">&#32;*&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
8 <emphasis role="comment">&#32;*&#32;the&#32;Free&#32;Software&#32;Foundation,&#32;either&#32;version&#32;3&#32;of&#32;the&#32;License,&#32;or</emphasis>
9 <emphasis role="comment">&#32;*&#32;(at&#32;your&#32;option)&#32;any&#32;later&#32;version.</emphasis>
10 <emphasis role="comment">&#32;*</emphasis>
11 <emphasis role="comment">&#32;*&#32;This&#32;program&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">&#32;*&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">&#32;*&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">&#32;*&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 <emphasis role="comment">&#32;*</emphasis>
16 <emphasis role="comment">&#32;*&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License</emphasis>
17 <emphasis role="comment">&#32;*&#32;along&#32;with&#32;this&#32;program.&#32;&#32;If&#32;not,&#32;see&#32;&lt;https://www.gnu.org/licenses/&gt;.</emphasis>
18 <emphasis role="comment">&#32;*</emphasis>
19 <emphasis role="comment">&#32;*&#32;Author:&#32;&#32;Lucas&#32;Hernández&#32;Abreu</emphasis>
20 <emphasis role="comment">&#32;*&#32;Contact:&#32;lucas.hernandez.09@ull.edu.es</emphasis>
21 <emphasis role="comment">&#32;*/</emphasis>
22 
31 <emphasis role="preprocessor">#ifndef&#32;_PIPELINE_H</emphasis>
32 <emphasis role="preprocessor">#define&#32;_PIPELINE_H</emphasis>
33 
34 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_pipe__node_8h">pipe_node.h</link>&quot;</emphasis>
35 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_processing__unit__interface_8h">processing_unit_interface.h</link>&quot;</emphasis>
36 
47 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classPipeline">Pipeline</link>&#32;{
48 &#32;&#32;<emphasis role="keyword">public</emphasis>:
49 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructor&#32;for&#32;the&#32;Pipeline&#32;class</emphasis>
50 &#32;&#32;&#32;&#32;<link linkend="_classPipeline">Pipeline</link>(<link linkend="_classProcessingUnitInterface">ProcessingUnitInterface</link>&#32;*,&#32;<link linkend="_classMemoryManager">MemoryManager</link>&#32;*,&#32;<emphasis role="keywordtype">int</emphasis>,
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;debug&#32;=&#32;<emphasis role="keyword">false</emphasis>);
52 
53 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Destructor&#32;of&#32;the&#32;Pipeline</emphasis>
54 &#32;&#32;&#32;&#32;<link linkend="_classPipeline_1a527044d53a20f851d0579fbf313a2dec">~Pipeline</link>();
55 
56 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Adds&#32;a&#32;new&#32;processing&#32;unit&#32;to&#32;the&#32;Pipeline</emphasis>
57 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classPipeline_1ab7308ae28e2ea4aa32da6811df29f152">AddProcessingUnit</link>(<link linkend="_classProcessingUnitInterface">ProcessingUnitInterface</link>&#32;*,&#32;<emphasis role="keywordtype">int</emphasis>);
58 
59 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Runs&#32;the&#32;pipe&#32;making&#32;all&#32;the&#32;threads&#32;wait&#32;for&#32;an&#32;input</emphasis>
60 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classPipeline_1aaa720ffefb8eb2bc61bd8336a7fee8ce">RunPipe</link>();
61 
62 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Waits&#32;until&#32;all&#32;the&#32;threads&#32;finished&#32;processing</emphasis>
63 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classPipeline_1a134c0e23c0260a6dc74bb936f39ecda9">WaitFinish</link>();
64 
65 &#32;&#32;<emphasis role="keyword">private</emphasis>:
66 &#32;&#32;&#32;&#32;std::vector&lt;PipeNode&#32;*&gt;&#32;execution_list_;&#32;
68 &#32;&#32;&#32;&#32;std::mutex&#32;execution_mtx_;&#32;
69 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;node_number_;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
70 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;debug_;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
71 };
72 
73 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
